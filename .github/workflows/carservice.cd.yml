name: CarService Continous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - release/**
    tags:
      - v.*.*.*

env:
  SERVICE: CarService
  CONTRACTFOLDER: CarService.Contracts
  APIFOLDER: CarService.Api
  REPOSITORY: carservice
  CONFIGURATION: Release

jobs:
  push_to_container_registry:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract tag
        run: |
          echo "TAG=${GITHUB_REF#refs/*/}" << $GITHUB_ENV
          echo $TAG

      - name: Signin to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ $GITHUB_HEAD_REF == 'release' }}
          tags: ${{ $TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "GithubToken=${{ secrets.GITHUB_TOKEN }}"
          file: $SERVICE/$APIFOLDER/Dockerfile

  push_to_nuget_registry:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup BuildNumber
        run: |
          BuildNumber="$GITHUB_RUN_NUMBER"
          echo "BuildNumber=$BuildNumber" >> $GITHUB_ENV

      - name: Setup GithubToken
        run: |
          GithubToken=${{ secrets.GITHUB_TOKEN }}
          echo "GithubToken=$GithubToken" >> $GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c $CONFIGURATION --no-restore

      - name: Push package to nuget registry
        run: |
          package=$(ls $SERVICE/$CONTRACTFOLDER/bin/$CONFIGURATION/*nupkg)
          dotnet nuget push "$package" --source "github" --skip-duplicate
