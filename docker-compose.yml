version: '3.9'

networks:
  service_net:

services:
  vacationservice:
    build:
      context: .
      dockerfile: VacationService/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    hostname: vacationservice
    container_name: vacationservice
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
    ports:
      - 5000:80
    depends_on:
      - eventbus
      - logger
      - prometheus
    networks:
      - service_net

  flightservice:
    build:
      context: .
      dockerfile: FlightService/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    container_name: flightservice
    hostname: flightservice
    ports:
      - 5001:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/neo4j.env
      - ./EnvironmentFiles/prometheus.env
      - ./EnvironmentFiles/mongo.env
    depends_on:
      - eventbus
      - logger
      - sagarepository
      - prometheus
    networks:
      - service_net
      
  hotelservice:
    build:
      context: .
      dockerfile: HotelService/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    container_name: hotelservice
    hostname: hotelservice
    ports:
      - 5002:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/neo4j.env
      - ./EnvironmentFiles/prometheus.env
    depends_on:
      - eventbus
      - logger
      - prometheus  
    networks:
      - service_net
      
  carservice:
    build:
      context: .
      dockerfile: CarService/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    container_name: carservice
    hostname: carservice
    ports:
      - 5003:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/neo4j.env
      - ./EnvironmentFiles/prometheus.env
    depends_on:
      - eventbus
      - logger
      - prometheus 
    networks:
      - service_net
      
  trackingservice:
    build:
      context: .
      dockerfile: TrackingService/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    container_name: trackingservice
    hostname: trackingservice
    ports:
      - 5004:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/neo4j.env
      - ./EnvironmentFiles/prometheus.env
    depends_on:
      - eventbus
      - logger
    networks:
      - service_net
      
  gatewayservice:
    build:
      context: .
      dockerfile: GatewayService/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    container_name: gatewayservice
    hostname: gatewayservice
    ports:
      - 5005:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/neo4j.env
      - ./EnvironmentFiles/prometheus.env
    depends_on: 
      - logger
      - prometheus
    networks:
      - service_net          

  logger:
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    container_name: logger
    hostname: logger
    networks:
      - service_net

  eventbus:
    image: masstransit/rabbitmq
    hostname: eventbus
    container_name: eventbus
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    volumes:
      - ./EventBus/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./EventBus/enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - service_net
      
  sagarepository:
    image: mongo:5.0.1-focal
    container_name: sagarepository
    hostname: sagarepository
    networks:
      - service_net
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: bookflights
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    hostname: neo4j
    environment:
      - NEO4J_AUTH=neo4j/test
    networks:
      - service_net
    volumes:
      - ./Neo4j/neo4j.conf:/conf  
      - ./Neo4j/initialize.cypher:/initialize.cypher
    ports:
      - "7474:7474"
      - "7687:7687"
      
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./Monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - service_net
          
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    container_name: grafana
    volumes:
      - ./Monitoring/grafana/provisioning/datasources/:/etc/grafana/provisioning/datasources/
      - ./Monitoring/grafana/provisioning/dashboards/:/etc/grafana/provisioning/dashboards/
      - ./Monitoring/grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - service_net
