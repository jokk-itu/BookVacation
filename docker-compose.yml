version: '3.9'

networks:
  service_net:

services:
  api:
    build:
      context: .
      dockerfile: Api/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    hostname: api
    container_name: api
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
    ports:
      - 5000:80
    depends_on:
      - eventbus
      - logger
    networks:
      - service_net

  bookflight:
    build:
      context: .
      dockerfile: BookFlightService/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    container_name: bookflight
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/neo4j.env
    depends_on:
      - eventbus
      - logger
      - sagarepository
    networks:
      - service_net
      
  bookhotel:
    build:
      context: .
      dockerfile: BookHotelService/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    container_name: bookhotel
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/neo4j.env
    depends_on:
      - eventbus
      - logger  
    networks:
      - service_net
      
  rentcar:
    build:
      context: .
      dockerfile: RentCarService/Dockerfile
      args:
        - Configuration=${Configuration}
        - Environment=${Environment}
    container_name: bookcar
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/neo4j.env
    depends_on:
      - eventbus
      - logger  
    networks:
      - service_net      

  logger:
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    container_name: logger
    hostname: logger
    networks:
      - service_net

  eventbus:
    image: masstransit/rabbitmq
    hostname: eventbus
    container_name: eventbus
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - "./EventBus/enabled_plugins:/etc/rabbitmq/enabled_plugins"
      - "./EventBus/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"
    networks:
      - service_net
      
  sagarepository:
    image: mongo:5.0.1-focal
    container_name: sagarepository
    hostname: sagarepository
    networks:
      - service_net
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: bookflights
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    hostname: neo4j
    environment:
      - NEO4J_AUTH=neo4j/test
    networks:
      - service_net
    volumes:
      - ./Neo4j/neo4j.conf:/conf  
    ports:
      - "7474:7474"
      - "7687:7687"
      
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./Monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - service_net
          
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    container_name: grafana
    networks:
      - service_net    
