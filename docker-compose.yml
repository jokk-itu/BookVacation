version: '3.9'

networks:
  service_net:

services:
  vacationservice:
    build:
      context: .
      dockerfile: VacationService/VacationService.Api/Dockerfile
      args:
        - GithubToken=${NUGET_API}
    container_name: vacationservice
    hostname: vacationservice
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
    ports:
      - 5000:80
    depends_on:
      - eventbus
      - logger
    networks:
      - service_net

  flightservice:
    build:
      context: .
      dockerfile: FlightService/FlightService.Api/Dockerfile
      args:
        - GithubToken=${NUGET_API}
    container_name: flightservice
    hostname: flightservice
    ports:
      - 5001:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/ravendb.env
    depends_on:
      - eventbus
      - logger
      - ravendb
    networks:
      - service_net
      
  hotelservice:
    build:
      context: .
      dockerfile: HotelService/HotelService.Api/Dockerfile
      args:
        - GithubToken=${NUGET_API}
    container_name: hotelservice
    hostname: hotelservice
    ports:
      - 5002:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/ravendb.env
    depends_on:
      - eventbus
      - logger
      - ravendb
    networks:
      - service_net
      
  carservice:
    build:
      context: .
      dockerfile: CarService/CarService.Api/Dockerfile
      args:
        - GithubToken=${NUGET_API}
    container_name: carservice
    hostname: carservice
    ports:
      - 5003:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/ravendb.env
    depends_on:
      - eventbus
      - logger
      - ravendb
    networks:
      - service_net
      
  trackingservice:
    build:
      context: .
      dockerfile: TrackingService/TrackingService.Api/Dockerfile
      args:
        - GithubToken=${NUGET_API}
    container_name: trackingservice
    hostname: trackingservice
    ports:
      - 5004:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/ravendb.env
    depends_on:
      - eventbus
      - logger
      - ravendb
    networks:
      - service_net
      
  gatewayservice:
    build:
      context: .
      dockerfile: GatewayService/GatewayService.Api/Dockerfile
      args:
        - GithubToken=${NUGET_API}
    container_name: gatewayservice
    hostname: gatewayservice
    ports:
      - 5005:80
      - 5006:443
    env_file:
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/gateway.env
    depends_on:
      - logger
    networks:
      - service_net
      
  ticketservice:
    build:
      context: .
      dockerfile: TicketService/TicketService.Api/Dockerfile
      args:
        - GithubToken=${NUGET_API}
    container_name: ticketservice
    hostname: ticketservice
    ports:
      - 5007:80
    env_file:
      - ./EnvironmentFiles/eventbus.env
      - ./EnvironmentFiles/logging.env
      - ./EnvironmentFiles/minio.env
    depends_on:
      - eventbus
      - logger
      - blobstorage
    networks:
      - service_net  

  logger:
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    container_name: logger
    hostname: logger
    networks:
      - service_net

  eventbus:
    image: masstransit/rabbitmq
    hostname: eventbus
    container_name: eventbus
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    volumes:
      - ./EventBus/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./EventBus/enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - service_net
      
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    container_name: prometheus
    hostname: prometheus
    volumes:
      - ./Monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - service_net
          
  grafana:
    image: grafana/grafana:8.2.6
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_DEFAULT_INSTANCE_NAME=local
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_APP_MODE=development
    volumes:
      - ./Monitoring/grafana/provisioning/datasources/:/etc/grafana/provisioning/datasources/
      - ./Monitoring/grafana/provisioning/dashboards/:/etc/grafana/provisioning/dashboards/
      - ./Monitoring/grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - prometheus
      - influxdb  
    networks:
      - service_net
     
  blobstorage:
    image: minio/minio
    hostname: blobstorage
    container_name: blobstorage
    ports:
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=access
      - MINIO_ROOT_PASSWORD=secret1234
    command: minio server /data --console-address ":9001"  
    networks:
      - service_net
      
  ravendb:
    image: ravendb/ravendb:ubuntu-latest
    hostname: ravendb
    container_name: ravendb
    ports:
      - 8080:8080
      - 38888:38888
    environment:
      - RAVEN_License_Eula_Accepted=true
      - RAVEN_Setup_Mode=None
      - RAVEN_Security_UnsecuredAccessAllowed=PrivateNetwork
    networks:
      - service_net
      
  influxdb:
    image: influxdb:2.0
    hostname: influxdb
    container_name: influxdb
    ports:
      - 8086:8086
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin12345
      - DOCKER_INFLUXDB_INIT_ORG=bookvacation
      - DOCKER_INFLUXDB_INIT_BUCKET=bookvacation
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=iXnNAnWD3YXqqs95Dy1x7l2J-bXxZvzS_cLNs8wGHLT7pTp8lxsipx3Tzv-ElDf3bD4NLwYBz822GnUtouUesQ==
    networks:
      - service_net
